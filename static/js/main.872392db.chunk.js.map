{"version":3,"sources":["components/SearchBar.js","components/VideoDetail.js","components/VideoItem.js","components/VideoList.js","api/youtube.js","App.js","index.js"],"names":["SearchBar","state","searchTerm","handleChange","event","_this","setState","target","value","handleSubmit","onFormSumbit","props","preventDefault","react_default","a","createElement","Paper","elevation","style","padding","onSubmit","this","TextField","fullWidth","label","onChange","React","Component","VideoDetail","_ref","video","console","log","videoSrc","concat","id","videoId","Fragment","height","frameBorder","width","title","src","Typography","variant","snippet","channelTitle","description","VideoItem","onVideoSelect","Grid","item","xs","display","alignItems","cursor","onClick","marginRight","alt","thumbnails","default","url","VideoList","videos","listOfVideos","map","components_VideoItem","key","container","spacing","axios","create","baseURL","App","selectedVideo","_callee","response","regenerator_default","wrap","_context","prev","next","youtube","get","params","part","maxResults","q","sent","data","items","stop","_this$state","justify","components_SearchBar","components_VideoDetail","components_VideoList","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.872392db.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Paper, TextField } from '@material-ui/core';\r\n\r\nclass SearchBar extends React.Component{\r\n  state = {\r\n    searchTerm: ''\r\n  }\r\n  //we will use an arrow function to bind the event handler function since\r\n  //arrow functions dont have their own 'this' inside the function,\r\n  //'this' will refier to the class\r\n\r\n  handleChange = (event) => {\r\n    //console.log(event.target.value);//changes the state to whatever the user inputs\r\n    //searchTerm is now event.target.value\r\n    this.setState({\r\n      searchTerm: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    //we are going to fetch our searchTerm from the state in order to use it to fetch\r\n    //data from the api.\r\n    //we will use destructuring in order to have cleaner code\r\n    //we no longer have to wright this.state.'key' every time we needed to reference a\r\n    //key value pair\r\n    const { searchTerm } = this.state;\r\n    //this will pass the state as props to the App componet\r\n    const { onFormSumbit } = this.props;\r\n    //\r\n    onFormSumbit(searchTerm);\r\n\r\n    //the following line prevents the page from refreshing when the search term is submited\r\n    event.preventDefault();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Paper elevation={6} style={{padding: '25px'}}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField fullWidth label=\"Search...\" onChange={this.handleChange} />\r\n        </form>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nimport {Paper, Typography} from '@material-ui/core';\r\n\r\nconst VideoDetail = ({video}) => {//{video} is props in a destructured format\r\n  if(!video) return <div>Loading...</div>\r\n  //using templete literals we will fetch the data dinamically and\r\n  //store it in variable to use it in the iframe tag\r\n  console.log(video)\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <Paper elevation={6} style={{height: '80%' }}>\r\n        <iframe\r\n          frameBorder=\"0\"\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          title=\"Video Player\"\r\n          src={videoSrc} />\r\n      </Paper>\r\n      <Paper elevation={6} style={{padding: '15px'}}>\r\n        <Typography variant=\"h4\">{video.snippet.title} - {video.snippet.channelTitle}</Typography>\r\n        <Typography variant=\"subtitle1\">{video.snippet.channelTitle}</Typography>\r\n        <Typography variant=\"subtitle2\">{video.snippet.description}</Typography>\r\n      </Paper>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\n\r\nimport {Grid, Paper, Typography} from '@material-ui/core';\r\n\r\nconst VideoItem = ({video, onVideoSelect}) => {\r\n  return(\r\n    <Grid item xs={12}>\r\n      <Paper style={{display:'flex', alignItems: 'center', cursor: 'pointer'}} onClick={() => onVideoSelect(video)}>\r\n        <img style={{marginRight: '20px'}} alt=\"thumbnail\" src={video.snippet.thumbnails.default.url} />\r\n        <Typography variant=\"subtitle1\"><b>{video.snippet.title}</b></Typography>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\n\r\nimport {Grid} from '@material-ui/core';\r\n\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({videos, onVideoSelect}) => {\r\n  const listOfVideos = videos.map((video, id) => <VideoItem onVideoSelect={onVideoSelect} key={id} video={video} />)\r\n  return (\r\n    <Grid container spacing={10}>\r\n      {listOfVideos}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default VideoList;\r\n","//this is an axios module that will allow us to tuck away our\r\n//REST API, this will make our code easier to read rather than calling\r\n//axios directly prepending base url all the time\r\n//we can also store a token in the module for reusability and always added\r\n//to any request.\r\n//it keeps all the REST API calls in one place allowing you to build an\r\n//SDK for that API, which as the project grows can have its own life cycle.\r\nimport axios from 'axios';\r\n\r\n//to have our code organized better, we will use .create\r\nexport default axios.create({\r\n    //this is the base url\r\n    baseURL: 'https://www.googleapis.com/youtube/v3'\r\n});\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SearchBar, VideoList, VideoDetail } from './components';\r\n\r\nimport youtube from './api/youtube';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tvideos: [],\r\n\t\tselectedVideo: null,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.handleSubmit('')\r\n\t};\r\n\r\n\tonVideoSelect = (video) => {\r\n\t\tthis.setState({selectedVideo: video})\r\n\t};\r\n\r\n\t//the following handles the user request to the api,\r\n\t//it concats the base url with the parameters of the function\r\n\t//async await stops the execution of the code until something gets fetched\r\n\t//youtube.get is an axios instance of fetch\r\n\t//'search' is a continuation of the base url + (/search)\r\n \t//than the parameters, q will become user input\r\n\thandleSubmit = async (searchTerm) => {\r\n\t\tconst response = await youtube.get('search', {\r\n\t\t\t//after the base url, we usually have parameters\r\n\t    //ex. ..?apiKey=1232123123&searchQuery='mista madd'\r\n\t    params: {\r\n\t      //part snippet will take place of the ex on line 22\r\n\t      part: 'snippet',\r\n\t      //this is the maximum results to be returned\r\n\t      maxResults: 5,\r\n\t      key: 'AIzaSyBE0UOfLYoAJVj15RGZwNQ9D1irRXF_T64',\r\n\t\t\t\t//in the youtube api q is most likely a query, and we will query the searchTerm\r\n\t\t\t\tq: searchTerm\r\n\t\t\t}\r\n\t\t});\r\n\t\t//console.log the response first,\r\n\t\t//look at the object fetched\r\n\t\t//determine what properties of the object you want to display\r\n\t\t//console.log(response.data.items) //should give you the list of 5 items\r\n\r\n\t\tthis.setState({ videos: response.data.items, selectedVideo: response.data.items[0] })\r\n\t\t//console.log(response.data.items, response.data.items[0])\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {selectedVideo, videos} = this.state\r\n\t\t//console.log(selectedVideo)\r\n\r\n\t\treturn (\r\n\t\t\t<Grid justify=\"center\" container spacing={10}>\r\n\t\t\t\t\t<Grid item xs={11}  >\r\n\t\t\t\t\t\t<Grid container spacing={10}>\r\n\t\t\t\t\t\t\t<Grid item xs= {12}>\r\n\t\t\t\t\t\t\t\t<SearchBar onFormSumbit={this.handleSubmit} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs ={8}>\r\n\t\t\t\t\t\t\t\t<VideoDetail video={selectedVideo} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs ={4}>\r\n\t\t\t\t\t\t\t\t<VideoList videos={videos} onVideoSelect={this.onVideoSelect} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}